package main

// import (
// 	"log"

// 	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
// )

// func main() {
// 	bot, err := tgbotapi.NewBotAPI("6796961656:AAGimXMVJzd0a1JwkFvSEqR28mbMQr2aL1k")
// 	if err != nil {
// 		log.Panic(err)
// 	}

// 	// bot.Debug = true

// 	log.Printf("Authorized on account %s", bot.Self.UserName)

// 	u := tgbotapi.NewUpdate(0)
// 	u.Timeout = 60

// 	updates := bot.GetUpdatesChan(u)

// 	for update := range updates {
// 		if update.Message == nil { // ignore any non-Message Updates
// 			continue
// 		}

// 		msg := tgbotapi.NewMessage(update.Message.Chat.ID, `–ü—Ä–∏–≤–µ—Ç:)
// –ù–∞–ø–∏—à–∏ –Ω–∞–º –æ —Å–≤–æ–µ–π –ø—Ä–æ–±–ª–µ–º–µ!`)
// 		keyboard := tgbotapi.NewInlineKeyboardMarkup(
// 			tgbotapi.NewInlineKeyboardRow(
// 				tgbotapi.NewInlineKeyboardButtonURL("–ü–æ—Å–µ—Ç–∏—Ç–µ –º–æ–π —Å–∞–π—Ç", "https://t.me/Bernar25"),
// 			),
// 		)
// 		msg.ReplyMarkup = keyboard

// 		bot.Send(msg)
// 	}
// }

import (
	"fmt"
	"log"
	"money/server"
	"os"
	"strconv"
	"sync"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

const (
	botToken               = "6796961656:AAGimXMVJzd0a1JwkFvSEqR28mbMQr2aL1k"
	CommandSendApplication = "SEND_APPLICATION"
)

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
type UserState struct {
	CurrentState string
	PrevState    string
}

var (
	bot             *tgbotapi.BotAPI
	userStates      = make(map[int64]*UserState)
	userStatesMutex sync.Mutex
	mainMenu        = tgbotapi.NewReplyKeyboard(

		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("–ù–∞—à–∏ —É—Å–ª—É–≥–∏!"),
			tgbotapi.NewKeyboardButton("–†–µ–º–æ–Ω—Ç –∏ –≤—ã–∫—É–ø!"),
		),
	)
)

func main() {
	// User("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Å—É–¥–∞—Ä—å") //–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–∞–∫—É –ø–∏—Å—å–º–æ
	bot, err := tgbotapi.NewBotAPI(botToken)
	if err != nil {
		log.Panic(err)
	}

	// bot.Debug = true

	log.Printf("Authorized on account %s", bot.Self.UserName)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message != nil { // If we got a message
			log.Printf("[%s] %s", update.Message.From.UserName, update.Message.Text)
			res := update.Message.Text
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, res)

			switch update.Message.Text {
			case "/start":
				Log("@" + update.Message.From.UserName + "  " + "–ò–ú–Ø: " + update.Message.Chat.FirstName + " " + update.Message.Chat.LastName + "  " + "ID: " + strconv.Itoa(int(update.Message.Chat.ID)) + "  " + update.Message.Text + "\n")
				msg = tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–∏–≤–µ—Ç, –º–æ–∂–µ—à—å –æ–ø–∏—Å–∞—Ç—å —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∏ –Ω–µ –∑–∞–±—É–¥—å –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã(WhatsApp, Telegram) –º—ã —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ–º—Å—è! —Å/—É KazSync:)")
				msg.ReplyMarkup = mainMenu
				bot.Send(msg)
			case "–†–µ–º–æ–Ω—Ç –∏ –≤—ã–∫—É–ø!":
				Log("@" + update.Message.From.UserName + "  " + "–ò–ú–Ø: " + update.Message.Chat.FirstName + " " + update.Message.Chat.LastName + "  " + "ID: " + strconv.Itoa(int(update.Message.Chat.ID)) + "  " + update.Message.Text + "\n")
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, `	–ü—Ä–∏–≤–µ—Ç:)
				–í—ã—Å—ã–ª–∞–π –≤—Å–µ —Å—é–¥–∞üëáü§ó`)
				keyboard := tgbotapi.NewInlineKeyboardMarkup(
					tgbotapi.NewInlineKeyboardRow(
						tgbotapi.NewInlineKeyboardButtonURL("–°ontact service", "https://t.me/era_gl450"),
					),
					tgbotapi.NewInlineKeyboardRow(

						tgbotapi.NewInlineKeyboardButtonURL("–°ontact service WhatsApp", "https://wa.me/77473195507"),
					),
				)
				msg.ReplyMarkup = keyboard
				bot.Send(msg)
			case "–ù–∞—à–∏ —É—Å–ª—É–≥–∏!":
				Log("@" + update.Message.From.UserName + "  " + "–ò–ú–Ø: " + update.Message.Chat.FirstName + " " + update.Message.Chat.LastName + "  " + "ID: " + strconv.Itoa(int(update.Message.Chat.ID)) + "  " + update.Message.Text + "\n")
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, `üñ•Ô∏èüõ†Ô∏è –ù–∞—à–∏ —É—Å–ª—É–≥–∏ üõ†Ô∏èüñ•Ô∏è
				ü§ù –ü—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
				–ü–æ–º–æ–≥–∞–µ–º —Ç–µ–º, –∫—Ç–æ –Ω–µ —Ä–∞–∑–±–∏—Ä–∞–µ—Ç—Å—è –≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞—Ö:
				
				üéì –û–±—É—á–µ–Ω–∏–µ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Ä–æ–∫–∏ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏.
				
				üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞: –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –æ—à–∏–±–æ–∫, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ü–û, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.
				
				üöÄ –£–¥–∞–ª–µ–Ω–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ: –û–Ω–ª–∞–π–Ω-–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–ª–∞–Ω—ã –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
				
				üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—á—Ç—ã, —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π, –ø–æ–º–æ—â—å —Å –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏.
				
				üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —Å–æ–≤–µ—Ç—ã: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é.
				
				üöë –°—Ä–æ—á–Ω—ã–π –≤—ã–∫—É–ø –∏ —Ä–µ–º–æ–Ω—Ç
				üí∏ –í—ã–∫—É–ø: –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —É—Å–ª—É–≥–∏ –≤—ã–∫—É–ø–∞ —Ç–µ—Ö–Ω–∏–∫–∏ –ø–æ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–π —Ü–µ–Ω–µ.
				
				üî® –†–µ–º–æ–Ω—Ç: –≠–∫—Å–ø—Ä–µ—Å—Å-—Ä–µ–º–æ–Ω—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤, –Ω–æ—É—Ç–±—É–∫–æ–≤ –∏ –≥–∞–¥–∂–µ—Ç–æ–≤.
				
				–î–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–º –∑–∞–±–æ—Ç—É –æ –≤–∞—à–µ–π —Ç–µ—Ö–Ω–∏–∫–µ ‚Äî –æ—Ç —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º –¥–æ –≤—ã–∫—É–ø–∞ –∏ —Ä–µ–º–æ–Ω—Ç–∞.`)
				bot.Send(msg)
			default:
				Log("@" + update.Message.From.UserName + "  " + "–ò–ú–Ø: " + update.Message.Chat.FirstName + " " + update.Message.Chat.LastName + "  " + "ID: " + strconv.Itoa(int(update.Message.Chat.ID)) + "  " + update.Message.Text + "\n")
				Mess("–ò–ú–Ø: " + update.Message.Chat.FirstName + " " + update.Message.Chat.LastName + "\n" + update.Message.Text)
			}

		}
	}
}

func Mess(text string) {
	c := server.New(botToken)

	c.SendMessage(text, -1002022179282)
}
func User(text string) {
	c := server.New(botToken)

	c.SendMessage(text, 308722033)
	fmt.Println("–û—Ç–ø—Ä–∞–≤–∏–ª!")
}

func Log(n string) {
	// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
	currentTime := time.Now()

	// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Å—Ç—Ä–æ–∫—É
	dateTimeString := currentTime.Format("2006-01-02 15:04:05")

	// –ò–º—è —Ñ–∞–π–ª–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –º—ã –±—É–¥–µ–º –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
	fileName := "log.txt"

	// –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ (–µ—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –æ–Ω –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω)
	file, err := os.OpenFile(fileName, os.O_WRONLY|os.O_CREATE|os.O_APPEND, 0644)
	if err != nil {
		fmt.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞:", err)
		return
	}
	defer file.Close()

	// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Ñ–∞–π–ª
	_, err = file.WriteString(dateTimeString + "    " + n)
	if err != nil {
		fmt.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª:", err)
		return
	}
}
